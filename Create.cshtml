@model Gatherings.Models.Pages.EventPageModel
@{
    ViewBag.Title = "Create";
}
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>
<div id="page-wrapper page-content-wrapper events-page">
    <div class="container-fluid event-top">
        <div class="row">
            <div class="col-md-6 big-img-bg" style="padding:0;">

                @if (@Model.eventList.FirstOrDefault().Image != "")
                {
                    <div id="openUploadInput">
                        <div id="bgSource" class="big-event-img" style="background: url(https://gatheringsblb.blob.core.windows.net/photos/@Model.eventList.FirstOrDefault().Image) no-repeat center center;background-size: cover;">
                        </div>
                    </div>
                }
                else
                {
                    <div id="openUploadInput" class="change-image">
                        <h3 id="openUploadInput">Change Image</h3>
                    </div>
                }
                <div id="uploadInput" hidden>
                    <input type="file" id="imgupload" />
                </div>
            </div>

            <div class="col-sm-3 visible-sm visible-xs" style="padding:0;">
                <div class="event-info2">
                    <div class="row">
                        <div class="col-sm-12 col-xs-4">
                            <div class="daysLeft1"><h5>Days Until Event</h5></div>
                        </div>
                        <div class="col-sm-12 col-xs-4">
                            <div class="peopleThrowdown1"><h5>People Going</h5></div>
                        </div>
                        <div class="col-sm-12 col-xs-4">
                            <div class="peopleNeeded1"><h5>Days Left to Throwdown</h5></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-sm-9 event-title margin-right" style="margin:0; padding:0;">
                <div class="details">
                    <div class="tab-main-container">
                        <div id="tab-edit-main" class="tab-content2">
                            <div class="row ">
                                <div class="col-xs-12 event-title margin-right">
                                    <div class="details-edit">

                                        <form>
                                            <div class="form-group">
                                                <h1 class="edit"><input type="text" class="form-control" id="event-title-input" placeholder="@(Model.eventList.FirstOrDefault().Title ?? "Event Title")"></h1>
                                            </div>
                                        </form>



                                        <div class="row">
                                            <div class='col-sm-5'>
                                                <div class="row">
                                                    <div class='col-sm-12'>
                                                        <div class="form-group">
                                                            <div class='input-group date' id='datetimepicker1'>
                                                                <input type="text" id="event-start-date" value="@Model.eventList.FirstOrDefault().StartDate" class="form-control" placeholder='Date' />
                                                                <span class="input-group-addon">
                                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-1">
                                                to
                                            </div>
                                            <div class='col-sm-6'>
                                                <div class="row">
                                                    <div class='col-sm-12'>
                                                        <div class="form-group">
                                                            <div class='input-group date' id='datetimepicker2'>
                                                                <input type="text" id="event-end-date" value="@Model.eventList.FirstOrDefault().EndDate" class="form-control" placeholder='Date' />
                                                                <span class="input-group-addon">
                                                                    <span class="glyphicon glyphicon-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <form>
                                            <div class="form-group">
                                                <h5 class="edit"><input type="text" class="form-control" id="autocomplete" onfocus="geolocate()" placeholder="Choose Location"></h5>
                                            </div>
                                        </form>
                                        <div class="event-description">
                                            <!--p class="edit">Add Description</p-->
                                            <div class="form-group">
                                                <p class="edit"><textarea id="event-details" class="form-control" rows="4" name="message" placeholder="Event Details">@Model.eventList.FirstOrDefault().Description</textarea></p>
                                            </div>
                                            <div class="row">
                                                <div class="col-sm-6 choose-throwdown">
                                                    <form>
                                                        <div class="form-group">
                                                            <h1><input type="text" class="form-control" id="exampleInputEmail1" placeholder="$0.00"></h1>
                                                        </div>
                                                        <p>How much would you like everyone to throwdown?</p>
                                                    </form>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="create-new-item-btn">
                                                        <a id="trigger5"><div>Invite Friends</div></a>

                                                        <!-- Invite Friends lightbox-->
                                                        <div>
                                                            <div id="container5" class="lightbox">
                                                                <div class="code">
                                                                    <form>
                                                                        <div class="form-group">
                                                                            <h5 class="edit"><input type="text" class="form-control" id="exampleInputEmail1" placeholder="Add Friends By Email"></h5>
                                                                            <a href="#" id="event-invite">Invite Friends</a>
                                                                        </div>
                                                                    </form>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <!-- End invite freinds lightbox -->
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid for-tabs">
            <div id="tabs-container" class="visible-sm visible-xs ">
                <ul class="tabs-menu">
                    <li class="current"><a href="#tab-1">Event Items</a></li>
                    <li><a href="#tab-2">Chat</a></li>
                </ul>
            </div>
        </div>
        <div class="container-fluid main-content">
            <div class="row event-items">
                <div class="bg-for-events">

                    <!--START EVENT LIST-->
                    <div class="tab">
                        <div id="tab-1" class="col-md-6 background-new tab-content">
                            <h3 class="sub-title">Event Items</h3>
                            <div class="create-new-item-btn">
                                <a><div>Create New Item</div></a>
                                <p>Create items that your guests can vote on.</p>
                            </div>
                            <div class="row">
                                <!--START ITEM-->
                                <div class="col-xs-12 host-item">
                                    <div class="new-event-item">
                                        <h3>Beer</h3>
                                        <h5>12 Voted</h5>
                                        <div class="votes">
                                            <div class="progress yes">
                                                <div class="progress-bar " role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width: 80%;">
                                                    <span class="sr-only">60% Complete</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xs-12 more-info">
                                    <div class="navbar-collapse navbar-ex2-collapse collapse">
                                        <ul class="nav navbar-nav">
                                            <ul class="list-group">
                                                <div class="newitems"></div>
                                                <br />
                                                <li class="list-group-item"><input type="text" placeholder="Add Details" class="newcat form-control" /></li>
                                            </ul>
                                        </ul>
                                    </div>
                                </div>

                                <div class="col-xs-12 ">
                                    <div class="item-info">
                                        <div class="navbar-header2">
                                            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex2-collapse">
                                                <span class="glyphicon glyphicon-chevron-down" aria-hidden="true" style="padding-right:5px;"></span>More Info

                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!--END ITEM-->
                            </div>
                        </div>
                        <!--Start chat-->
                        <div id="tab-2" class="col-md-6 tab-content">
                            <h3 class="sub-title hidden-xs hidden-sm">Event Details</h3>
                            <div class="event-info2 hidden-xs hidden-sm">
                                <div class="row">
                                    <div class="col-xs-4">
                                        <div class="daysLeft"><h5>Days Until Event</h5></div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="peopleThrowdown"><h5>People Going</h5></div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="peopleNeeded"><h5>Days Left to Throwdown</h5></div>
                                    </div>
                                </div>
                            </div>
                            <!--start chat-->
                            <div class="panel panel-info  event-chat">
                                <h3 class="sub-title">Event Chat</h3>
                                <div class="panel-footer">
                                    <div class="input-group">
                                        <input type="text" id="message" class="form-control" placeholder="Enter Message" />
                                        <span class="input-group-btn">
                                            <button id="send-chat" class="btn btn-info" type="button">SEND</button>
                                        </span>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <ul class="media-list">
                                        @foreach (var chat in Model.eventList.FirstOrDefault().chats)
                                        {
                                            <li class="media">
                                                <div class="media-body">
                                                    <div class="media">
                                                        <a class="pull-left" href="#">
                                                            <img class="media-object img-circle " src="/img/user.png" />
                                                        </a>
                                                        <div class="media-body">
                                                            @chat.Message
                                                            <br />
                                                            <small class="text-muted">@chat.UserName | @chat.SubmitDate.ToString("MM/dd/yyyy")</small>
                                                            <hr />
                                                        </div>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                            <!--end chat-->
                        </div><!--END TAB-->
                        <!--END EVENT LIST-->
                    </div>
                </div>
            </div>
        </div>
        <!-- /.container-fluid -->
    </div>
    <!-- /#page-wrapper -->
</div>
<!-- /#wrapper -->
@*<input id="autocomplete" placeholder="Enter your address"
       onfocus="geolocate()" type="text" />*@
<script>
    $("#menu-toggle").click(function (e) {
        e.preventDefault();
        $("#wrapper").toggleClass("toggled");
    });
</script>
@section scripts{
    <!-- jQuery -->
    <!-- Bootstrap Core JavaScript -->
    <script src="/Scripts/progressbar.min.js"></script>
    <script type="text/javascript" src="/Scripts/bootstrap-datetimepicker.min.js"></script>

    <script>

        $(function () {
            $('#datetimepicker1').datetimepicker();
        });

        $(function () {
            $('#datetimepicker2').datetimepicker();
        });

        $(document).ready(function () {

            //Event Title Update
            $('#event-title-input').blur(function () {

                $.ajax({
                    type: 'POST',
                    url: '/Event/UpdateTitle',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        Title: $(this).val()
                    },
                    success: function (retURL) {
                    },
                    async: false
                });

            });

            $('#event-title-input').keypress(function (e) {
                if (e.which == 13) {
                    $.ajax({
                        type: 'POST',
                        url: '/Event/UpdateTitle',
                        dataType: 'json',
                        data: {
                            EventId: '@Model.eventList.FirstOrDefault().EventId',
                            Title: $(this).val()
                        },
                        success: function (retURL) {
                            $('#event-start-date').focus();
                        },
                        async: false
                    });
                }
            });

            //Event Details Update
            $('#event-details').blur(function () {

                $.ajax({
                    type: 'POST',
                    url: '/Event/UpdateDescription',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        Description: $(this).val()
                    },
                    success: function (retURL) {
                        location.reload();
                    }
                });
            });

            $('#event-details').keypress(function (e) {
                if (e.which == 13) {
                    $.ajax({
                        type: 'POST',
                        url: '/Event/UpdateDescription',
                        dataType: 'json',
                        data: {
                            EventId: '@Model.eventList.FirstOrDefault().EventId',
                            Description: $(this).val()
                        },
                        success: function (retURL) {
                            location.reload();
                        }
                    });
                }
            });

            $('#event-start-date').blur(function () {
                $.ajax({
                    type: 'POST',
                    url: '/Event/UpdateStartDate',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        StartDate: $(this).val()
                    },
                    success: function (retURL) {
                    },
                    async: false
                });
                return false;
            });

            $('#event-end-date').blur(function () {
                $.ajax({
                    type: 'POST',
                    url: '/Event/UpdateEndDate',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        EndDate: $(this).val()
                    },
                    success: function (retURL) {
                    },
                    async: false
                });
                return false;
            });

            //For when we have the VenueId
            @*$('#event-end-date').blur(function () {
            alert($(this).html());

            $.ajax({
                type: 'POST',
                url: '/Event/UpdateEndDate',
                dataType: 'json',
                data: {
                    EventId: @Model.eventList.FirstOrDefault().EventId,
                    VenueId:
                    },
                success: function (retURL) {
                    alert('YOLO!');
                }
            });
            return false;
        });*@


            $('#event-delete').blur(function () {

                $.ajax({
                    type: 'POST',
                    url: '/Event/UpdateDelete',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        IsDelete: true
                    },
                    success: function (retURL) {
                    }
                });
                return false;
            });

            $('#send-chat').click(function () {

                $.ajax({
                    type: 'POST',
                    url: '/Event/SendChat',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        Message: $('#message').val()
                    },
                    success: function (retURL) {
                    },
                    async: false
                });

                window.location.reload();
            });

            $('#event-invite').click(function () {

                $.ajax({
                    type: 'POST',
                    url: '/Event/Invite',
                    dataType: 'json',
                    data: {
                        EventId: '@Model.eventList.FirstOrDefault().EventId',
                        Email: $('#emails').val()
                    },
                    success: function (retURL) {
                    }
                });

                alert("Email Sent");

                location.reload();

            });

            $('#openUploadInput').click(function () {
                $('#imgupload').trigger('click');
            });


            $("#imgupload").change(function () {
                var formdata = new FormData(); //FormData object
                var fileInput = document.getElementById('imgupload');

                //Appending each file to FormData object
                formdata.append("EventId", "@(Model.eventList.FirstOrDefault().EventId)");
                formdata.append("Imagefile", fileInput.files[0]);

                //Creating an XMLHttpRequest and sending
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '/Event/UpdateBanner', false);
                xhr.send(formdata);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        //alert(xhr.responseText);
                    }
                }

                $("#bgSource").attr("src", "https://gatheringsblb.blob.core.windows.net/photos/" + xhr.responseText.replace(/"/g, ''));

                location.reload();

                // or something: $fileInput.files[0].val('');
            });

        });



        // This example displays an address form, using the autocomplete feature
        // of the Google Places API to help users fill in the information.

        var placeSearch, autocomplete;
        var componentForm = {
            street_number: 'short_name',
            route: 'long_name',
            locality: 'long_name',
            administrative_area_level_1: 'short_name',
            country: 'long_name',
            postal_code: 'short_name'
        };

        function initialize() {
            // Create the autocomplete object, restricting the search
            // to geographical location types.
            autocomplete = new google.maps.places.Autocomplete(
                /** @@type {HTMLInputElement} */(document.getElementById('autocomplete')),
                { types: ['geocode'] });
            // When the user selects an address from the dropdown,
            // populate the address fields in the form.
            google.maps.event.addListener(autocomplete, 'place_changed', function () {
                fillInAddress();
            });
        }

        // [START region_fillform]
        function fillInAddress() {
            // Get the place details from the autocomplete object.
            var place = autocomplete.getPlace();

            for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }

            // Get each component of the address from the place details
            // and fill the corresponding field on the form.
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];
                if (componentForm[addressType]) {
                    var val = place.address_components[i][componentForm[addressType]];
                    document.getElementById(addressType).value = val;
                }
            }
        }
        // [END region_fillform]

        // [START region_geolocation]
        // Bias the autocomplete object to the user's geographical location,
        // as supplied by the browser's 'navigator.geolocation' object.
        function geolocate() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var geolocation = new google.maps.LatLng(
                        position.coords.latitude, position.coords.longitude);
                    var circle = new google.maps.Circle({
                        center: geolocation,
                        radius: position.coords.accuracy
                    });
                    autocomplete.setBounds(circle.getBounds());
                });
            }
        }
        // [END region_geolocation]



    </script>
}